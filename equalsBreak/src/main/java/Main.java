class EqualsBreakReflexive {     @Override     public boolean equals(Object obj) {          System.out.println("////// BREAK REFLEXIVE //////");          if(this == obj){               return false;          }          return super.equals(obj);     }}class EqualsBreaksSymmetric{     public boolean sym;     public EqualsBreaksSymmetric(boolean b) {          this.sym = b;     }     @Override     public boolean equals(Object obj) {          return sym;     }}class EqualsBreaksTransitive{     private int por;     public EqualsBreaksTransitive(int por){          this.por=por;     }     @Override     public boolean equals(Object obj) {          if (por != 3){               return true;          }          return false;     }}class EqualsBreaksConsistent{     protected int i=0;     @Override     public boolean equals(Object obj) {          if (i != 0) {               return false;          }          i++;          return true;     }}class EqualsBreaksNull{     @Override     public boolean equals(Object obj){          if (obj == null){               return true;          }          return false;     }}public class Main {     private static void breakReflexive(){          var r = new EqualsBreakReflexive();          System.out.printf("r == r ?= %s  but it should be true %n %n",r.equals(r));     }     private static void breakSymmetric(){          System.out.println("////// BREAK SYMMETRIC //////");          var s1 = new EqualsBreaksSymmetric(true);          var s2 = new EqualsBreaksSymmetric(false);          System.out.println("s1 == s2 ?= " + s1.equals(s2));          System.out.printf("s2 == s1 ?= %s %n %n",s2.equals(s1));     }     private static void breakTransitive(){          System.out.println("////// BREAK TRANSITIVE //////");          var t1 = new EqualsBreaksTransitive(1);          var t2 = new EqualsBreaksTransitive(2);          var t3 = new EqualsBreaksTransitive(3);          System.out.println("t1 == t2 ?= " + t1.equals(t2));          System.out.println("t2 == t3 ?= " + t2.equals(t3));          System.out.printf("t3 == t1 ?= %s %n %n", t3.equals(t1));     }     private static void breakConsistent() {          System.out.println("////// BREAK CONSISTENT //////");          var c1 = new EqualsBreaksConsistent();          var c2 = new EqualsBreaksConsistent();          System.out.println("c1 == c2 ?= " + c1.equals(c2));          System.out.printf("c1 == c2 ?= %s %n %n",c1.equals(c2));     }     private static void breakNull(){          System.out.println("////// BREAK 5(NULL) //////");          var a = new EqualsBreaksNull();          System.out.printf("a == null ?= %s   but it should be false %n",a.equals(null));     }          public static void main(String[] arg){          breakReflexive();          breakSymmetric();          breakTransitive();          breakConsistent();          breakNull();     }}